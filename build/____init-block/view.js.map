{"version":3,"file":"____init-block/view.js","mappings":";;;;;;;;;AAAA;;;;;;SCAA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;ACNA;AACA;AACA;AAC6D;;AAE7D;;AAKA,MAAM;EAAEC;AAAM,CAAC,GAAGD,+DAAK,CAAC,kBAAkB,EAAE;EAC3CC,KAAK,EAAE,CAAC,CAAW;EACnBC,OAAO,EAAE,CAAC,CAAC;EACXC,SAAS,EAAE;IACVC,aAAa,EAAEA,CAAA,KAAM,CAAC;EACvB;AACD,CAAC,CAAC,C","sources":["webpack://ncmaz-fse-core/external module \"@wordpress/interactivity\"","webpack://ncmaz-fse-core/webpack/bootstrap","webpack://ncmaz-fse-core/webpack/runtime/make namespace object","webpack://ncmaz-fse-core/./src/____init-block/view.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { store, getContext } from \"@wordpress/interactivity\";\n\n// view.js\ninterface TContext {}\n\ninterface TState {}\n\nconst { state } = store(\"ncmfse/init_demo\", {\n\tstate: {} as TState,\n\tactions: {},\n\tcallbacks: {\n\t\tlogHandleInit: () => {},\n\t},\n});\n"],"names":["store","state","actions","callbacks","logHandleInit"],"sourceRoot":""}