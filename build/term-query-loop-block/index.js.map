{"version":3,"file":"term-query-loop-block/index.js","mappings":"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CZ,CACC,sBAAsB,EACtB,CAAC,CAAC,EACF,CACC,CACC,YAAY,EACZ,CAAC,CAAC,EACF;EACC;EACA,CAAC,0BAA0B,CAAC,EAC5B,CAAC,kBAAkB,CAAC,EACpB,CAAC,yBAAyB,CAAC,EAC3B,CAAC,mBAAmB,CAAC,CACrB,CACD,CACD,CACD,CACD;EACDuC,KAAK,EAAE,CAAC,OAAO;AAChB,CAAC,CACD;AAED,iEAAe1C,UAAU;;;;;;;;;;;ACvCzB;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://todo-list/./node_modules/@wordpress/icons/build-module/library/loop.js","webpack://todo-list/./src/term-query-loop-block/edit/index.tsx","webpack://todo-list/./src/term-query-loop-block/edit/inspector-controls/index.tsx","webpack://todo-list/./src/term-query-loop-block/edit/inspector-controls/order-control.tsx","webpack://todo-list/./src/term-query-loop-block/edit/inspector-controls/page-control.tsx","webpack://todo-list/./src/term-query-loop-block/edit/inspector-controls/per-page-control.tsx","webpack://todo-list/./src/term-query-loop-block/edit/query-content.tsx","webpack://todo-list/./src/term-query-loop-block/edit/query-placeholder.tsx","webpack://todo-list/./src/term-query-loop-block/icons.tsx","webpack://todo-list/./src/term-query-loop-block/index.tsx","webpack://todo-list/./src/term-query-loop-block/save.tsx","webpack://todo-list/./src/term-query-loop-block/utils.ts","webpack://todo-list/./src/term-query-loop-block/variations.ts","webpack://todo-list/./src/term-query-loop-block/style.scss","webpack://todo-list/external window \"React\"","webpack://todo-list/external window [\"wp\",\"blockEditor\"]","webpack://todo-list/external window [\"wp\",\"blocks\"]","webpack://todo-list/external window [\"wp\",\"components\"]","webpack://todo-list/external window [\"wp\",\"compose\"]","webpack://todo-list/external window [\"wp\",\"coreData\"]","webpack://todo-list/external window [\"wp\",\"data\"]","webpack://todo-list/external window [\"wp\",\"element\"]","webpack://todo-list/external window [\"wp\",\"i18n\"]","webpack://todo-list/external window [\"wp\",\"primitives\"]","webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/chunk loaded","webpack://todo-list/webpack/runtime/compat get default export","webpack://todo-list/webpack/runtime/define property getters","webpack://todo-list/webpack/runtime/hasOwnProperty shorthand","webpack://todo-list/webpack/runtime/make namespace object","webpack://todo-list/webpack/runtime/jsonp chunk loading","webpack://todo-list/webpack/before-startup","webpack://todo-list/webpack/startup","webpack://todo-list/webpack/after-startup"],"sourcesContent":["import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst loop = createElement(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, createElement(Path, {\n  d: \"M18.1823 11.6392C18.1823 13.0804 17.0139 14.2487 15.5727 14.2487C14.3579 14.2487 13.335 13.4179 13.0453 12.2922L13.0377 12.2625L13.0278 12.2335L12.3985 10.377L12.3942 10.3785C11.8571 8.64997 10.246 7.39405 8.33961 7.39405C5.99509 7.39405 4.09448 9.29465 4.09448 11.6392C4.09448 13.9837 5.99509 15.8843 8.33961 15.8843C8.88499 15.8843 9.40822 15.781 9.88943 15.5923L9.29212 14.0697C8.99812 14.185 8.67729 14.2487 8.33961 14.2487C6.89838 14.2487 5.73003 13.0804 5.73003 11.6392C5.73003 10.1979 6.89838 9.02959 8.33961 9.02959C9.55444 9.02959 10.5773 9.86046 10.867 10.9862L10.8772 10.9836L11.4695 12.7311C11.9515 14.546 13.6048 15.8843 15.5727 15.8843C17.9172 15.8843 19.8178 13.9837 19.8178 11.6392C19.8178 9.29465 17.9172 7.39404 15.5727 7.39404C15.0287 7.39404 14.5066 7.4968 14.0264 7.6847L14.6223 9.20781C14.9158 9.093 15.2358 9.02959 15.5727 9.02959C17.0139 9.02959 18.1823 10.1979 18.1823 11.6392Z\"\n}));\nexport default loop;\n//# sourceMappingURL=loop.js.map","/**\n * WordPress dependencies\n */\nimport { useSelect } from \"@wordpress/data\";\nimport { store as blockEditorStore } from \"@wordpress/block-editor\";\n\n/**\n * Internal dependencies\n */\nimport QueryContent from \"./query-content\";\nimport QueryPlaceholder from \"./query-placeholder\";\nimport metadata from \"../block.json\";\nimport { EditProps, TAttrs } from \"../../types\";\n\ntype Attributes = TAttrs<typeof metadata.attributes>;\n\nexport type TermQueryEditProps = EditProps<Attributes> & { name: string };\n\nconst QueryEdit = (props: TermQueryEditProps) => {\n\tconst { clientId } = props;\n\n\tconst hasInnerBlocks = useSelect(\n\t\t(select) => !!(select(blockEditorStore) as any).getBlocks(clientId).length,\n\t\t[clientId],\n\t);\n\tconst Component = hasInnerBlocks ? QueryContent : QueryPlaceholder;\n\treturn (\n\t\t<>\n\t\t\t<Component {...props} />\n\t\t</>\n\t);\n};\n\nexport default QueryEdit;\n","/**\n * WordPress dependencies\n */\nimport {\n\tBaseControl,\n\tFormTokenField,\n\tPanelBody,\n\tSelectControl,\n\tToggleControl,\n\t__experimentalToggleGroupControl as ToggleGroupControl,\n\t__experimentalToggleGroupControlOption as ToggleGroupControlOption,\n} from \"@wordpress/components\";\nimport { __ } from \"@wordpress/i18n\";\nimport { TokenItem } from \"@wordpress/components/build-types/form-token-field/types\";\nimport { useEntityRecords } from \"@wordpress/core-data\";\nimport { useMemo } from \"@wordpress/element\";\nimport { TermQueryEditProps } from \"..\";\nimport { MyTermQueryUpdateFuncT } from \"../query-content\";\nimport OrderControl from \"./order-control\";\nimport PerPageControl from \"./per-page-control\";\nimport PageControl from \"./page-control\";\nimport { usePostTypes, useTaxonomies } from \"../../utils\";\n\nexport default function QueryInspectorControls(\n\tprops: Pick<\n\t\tTermQueryEditProps,\n\t\t| \"attributes\"\n\t\t| \"setQuery\"\n\t\t| \"setDisplayLayout\"\n\t\t| \"clientId\"\n\t\t| \"setAttributes\"\n\t> & {\n\t\tsetQuery: MyTermQueryUpdateFuncT;\n\t},\n) {\n\tconst { attributes, setQuery, setDisplayLayout, setAttributes, clientId } =\n\t\tprops;\n\tconst { myQuery, displayLayout } = attributes;\n\tconst {\n\t\tperPage,\n\t\tisFilterByOrder,\n\t\ttaxonomySlug,\n\t\ttermIdList,\n\t\tinherit,\n\t\texcludeIdList,\n\t\thideEmpty,\n\t\torder,\n\t\torderBy,\n\t\tparentIdString,\n\t\tpostType,\n\t\tpage,\n\t} = myQuery;\n\n\tconst taxonomiesRecords = useTaxonomies(postType);\n\n\tconst { records: termRecords } = useEntityRecords<Record<string, any>>(\n\t\t\"taxonomy\",\n\t\ttaxonomySlug,\n\t\t{\n\t\t\tper_page: -1,\n\t\t\torderby: \"name\",\n\t\t\torder: \"asc\",\n\t\t\t_fields: \"id,name,parent\",\n\t\t\tcontext: \"view\",\n\t\t},\n\t);\n\n\tconst { postTypesTaxonomiesMap = {}, postTypesSelectOptions } =\n\t\tusePostTypes();\n\n\tconst taxonomies = useMemo(() => {\n\t\tconst data =\n\t\t\ttaxonomiesRecords?.map((item) => {\n\t\t\t\tif (!item?.visibility?.publicly_queryable) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tvalue: item.slug,\n\t\t\t\t\tlabel: item.name,\n\t\t\t\t};\n\t\t\t}) || [];\n\t\treturn data.filter((item) => item !== null);\n\t}, [taxonomiesRecords]);\n\n\tconst termRecordsConvert = useMemo(() => {\n\t\tconst data =\n\t\t\ttermRecords?.map((item) => {\n\t\t\t\tlet label = item.name;\n\t\t\t\tif (item.parent) {\n\t\t\t\t\tconst parent = termRecords.find((term) => term.id === item.parent);\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tlabel = `${parent.name} > ${label}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\tid: item.id.toString(),\n\t\t\t\t\tlabel,\n\t\t\t\t\tparent: item.parent,\n\t\t\t\t};\n\t\t\t}) || [];\n\t\treturn data;\n\t}, [termRecords]);\n\n\tconst childTermRecords = useMemo(() => {\n\t\tif (typeof parentIdString !== \"string\") {\n\t\t\treturn termRecordsConvert;\n\t\t}\n\t\treturn termRecordsConvert.filter((item) => item.parent == parentIdString);\n\t}, [termRecordsConvert, parentIdString]);\n\n\tconst onPostTypeChange = (newValue: string) => {\n\t\tlet updateQuery = { postType: newValue };\n\t\t// We need to dynamically update the `taxQuery` property,\n\t\t// by removing any not supported taxonomy from the query.\n\t\tconst supportedTaxonomies = postTypesTaxonomiesMap[newValue];\n\n\t\tsetQuery({\n\t\t\t...updateQuery,\n\t\t\ttaxonomySlug: supportedTaxonomies[0],\n\t\t\tparent: null,\n\t\t\ttermIdList: [],\n\t\t\texcludeIdList: [],\n\t\t});\n\t};\n\n\tconst termNameList = termRecordsConvert.map((item) => item.label);\n\tconst temChildNameList = childTermRecords.map((item) => item.label);\n\n\tconst getTermNameListFromIds = (ids: string[] = []) => {\n\t\treturn termRecordsConvert\n\t\t\t.filter((item) => ids.includes(item.id))\n\t\t\t.map((item) => item.label);\n\t};\n\tconst getTermIdsFromNames = (names: (string | TokenItem)[] = []) => {\n\t\treturn termRecordsConvert\n\t\t\t.filter((item) => names.includes(item.label))\n\t\t\t.map((item) => item.id);\n\t};\n\n\tconst postTypeControlHelp = __(\n\t\t\"Limit results to taxonomies associated with a specific post type.\",\n\t);\n\treturn (\n\t\t<>\n\t\t\t<PanelBody title={__(\"Settings\")}>\n\t\t\t\t<ToggleControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tchecked={inherit}\n\t\t\t\t\tlabel={__(\"Inherit from the archive page.\")}\n\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\tsetQuery({ inherit: value });\n\t\t\t\t\t}}\n\t\t\t\t\thelp={__(\n\t\t\t\t\t\t\"Limit results are set to terms assigned to the parent - current archive page. Note: This only works in archive pages.\",\n\t\t\t\t\t)}\n\t\t\t\t/>\n\n\t\t\t\t{!inherit &&\n\t\t\t\t\t(postTypesSelectOptions.length > 2 ? (\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\toptions={postTypesSelectOptions}\n\t\t\t\t\t\t\tvalue={postType}\n\t\t\t\t\t\t\tlabel={__(\"Post type\")}\n\t\t\t\t\t\t\tonChange={onPostTypeChange}\n\t\t\t\t\t\t\thelp={postTypeControlHelp}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ToggleGroupControl\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tisBlock\n\t\t\t\t\t\t\tvalue={postType}\n\t\t\t\t\t\t\tlabel={__(\"Post type\")}\n\t\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\t\tvalue ? onPostTypeChange(value?.toString() || \"\") : null;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thelp={postTypeControlHelp}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{postTypesSelectOptions.map((option) => (\n\t\t\t\t\t\t\t\t<ToggleGroupControlOption\n\t\t\t\t\t\t\t\t\tkey={option.value}\n\t\t\t\t\t\t\t\t\tvalue={option.value}\n\t\t\t\t\t\t\t\t\tlabel={option.label}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ToggleGroupControl>\n\t\t\t\t\t))}\n\n\t\t\t\t{/* // loai taxonomies -> lua chon loai taxonomy de filter terms */}\n\t\t\t\t{!inherit && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{taxonomies.length ? (\n\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tlabel={__(\"Taxonomy type\")}\n\t\t\t\t\t\t\t\tvalue={taxonomySlug}\n\t\t\t\t\t\t\t\toptions={taxonomies}\n\t\t\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\t\t\tsetQuery({\n\t\t\t\t\t\t\t\t\t\ttaxonomySlug: value,\n\t\t\t\t\t\t\t\t\t\tparent: null,\n\t\t\t\t\t\t\t\t\t\ttermIdList: [],\n\t\t\t\t\t\t\t\t\t\texcludeIdList: [],\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<BaseControl\n\t\t\t\t\t\t\t\tlabel={__(\"Taxonomy type\")}\n\t\t\t\t\t\t\t\thelp={__(\n\t\t\t\t\t\t\t\t\t\"No taxonomy found, please try again with another post type.\",\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t</BaseControl>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\t\t\t\t<ToggleControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tchecked={hideEmpty}\n\t\t\t\t\tlabel={__(\"Hide empty terms.\")}\n\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\tsetQuery({ hideEmpty: value });\n\t\t\t\t\t}}\n\t\t\t\t\thelp={__(\n\t\t\t\t\t\t\"Display a list of terms that have posts associated with them.\",\n\t\t\t\t\t)}\n\t\t\t\t/>\n\n\t\t\t\t{/* <ToggleControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tchecked={isFilterByOrder}\n\t\t\t\t\tlabel={__(\"Filter by order.\")}\n\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\tsetQuery({ isFilterByOrder: value });\n\t\t\t\t\t}}\n\t\t\t\t\thelp={__(\n\t\t\t\t\t\t\"Display a list of terms in a sort order-by or in a specific terms selected.\",\n\t\t\t\t\t)}\n\t\t\t\t/> */}\n\t\t\t</PanelBody>\n\n\t\t\t<PanelBody title={__(\"Query\")}>\n\t\t\t\t<OrderControl order={order} orderBy={orderBy} onChange={setQuery} />\n\t\t\t\t<PerPageControl perPage={perPage} onChange={setQuery} />\n\t\t\t\t<PageControl page={page} onChange={setQuery} />\n\t\t\t</PanelBody>\n\n\t\t\t{!inherit && (\n\t\t\t\t<PanelBody title={__(\"Terms Settings\")} initialOpen={false}>\n\t\t\t\t\t{!!termNameList.length ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<BaseControl\n\t\t\t\t\t\t\t\thelp={__(\n\t\t\t\t\t\t\t\t\t\"Limit result set to terms assigned to a specific parent. Data will return empty if the selected has no children. \",\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FormTokenField\n\t\t\t\t\t\t\t\t\t__experimentalAutoSelectFirstMatch\n\t\t\t\t\t\t\t\t\t__experimentalExpandOnFocus\n\t\t\t\t\t\t\t\t\t__experimentalShowHowTo={false}\n\t\t\t\t\t\t\t\t\tlabel={__(\"Parent\")}\n\t\t\t\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\t\t\t\tif (!Array.isArray(value)) {\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// cần reverse để lấy id của parent cuối cùng trong mảng. VÌ chỉ chọn 1 parent\n\t\t\t\t\t\t\t\t\t\tconst parentIds = getTermIdsFromNames([value.reverse()[0]]);\n\t\t\t\t\t\t\t\t\t\tsetQuery({\n\t\t\t\t\t\t\t\t\t\t\tparentIdString: parentIds[0],\n\t\t\t\t\t\t\t\t\t\t\ttermIdList: [],\n\t\t\t\t\t\t\t\t\t\t\texcludeIdList: [],\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tsuggestions={termNameList}\n\t\t\t\t\t\t\t\t\tvalue={getTermNameListFromIds(\n\t\t\t\t\t\t\t\t\t\ttypeof parentIdString === \"string\" ? [parentIdString] : [],\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tmaxLength={1}\n\t\t\t\t\t\t\t\t\tplaceholder={__(\"Select only one parent\")}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseControl>\n\n\t\t\t\t\t\t\t<BaseControl\n\t\t\t\t\t\t\t\thelp={__(\n\t\t\t\t\t\t\t\t\t\"Show a list of terms with related posts. Leave blank if you want to catch all.\",\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FormTokenField\n\t\t\t\t\t\t\t\t\t__experimentalAutoSelectFirstMatch\n\t\t\t\t\t\t\t\t\t__experimentalExpandOnFocus\n\t\t\t\t\t\t\t\t\tlabel={__(\"Terms include\")}\n\t\t\t\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\t\t\t\tif (!Array.isArray(value)) {\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tsetQuery({ termIdList: getTermIdsFromNames(value) });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tsuggestions={temChildNameList}\n\t\t\t\t\t\t\t\t\tvalue={getTermNameListFromIds(termIdList)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseControl>\n\n\t\t\t\t\t\t\t<BaseControl\n\t\t\t\t\t\t\t\thelp={__(\"Exclude a list of terms with related posts.\")}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FormTokenField\n\t\t\t\t\t\t\t\t\t__experimentalAutoSelectFirstMatch\n\t\t\t\t\t\t\t\t\t__experimentalExpandOnFocus\n\t\t\t\t\t\t\t\t\tlabel={__(\"Terms exclude\")}\n\t\t\t\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\t\t\t\tif (!Array.isArray(value)) {\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tsetQuery({ excludeIdList: getTermIdsFromNames(value) });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tsuggestions={temChildNameList}\n\t\t\t\t\t\t\t\t\tvalue={getTermNameListFromIds(excludeIdList)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseControl>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<BaseControl\n\t\t\t\t\t\t\thelp={__(\n\t\t\t\t\t\t\t\t\"Please select a taxonomy type to filter terms by parent, include, exclude. Or with your current query no results are found, please try again.\",\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t</BaseControl>\n\t\t\t\t\t)}\n\t\t\t\t</PanelBody>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { SelectControl } from \"@wordpress/components\";\nimport { __ } from \"@wordpress/i18n\";\n\nconst orderOptions = [\n\t{\n\t\tlabel: __(\"Include/desc\"),\n\t\tvalue: \"include/desc\",\n\t},\n\t{\n\t\tlabel: __(\"Include/asc\"),\n\t\tvalue: \"include/asc\",\n\t},\n\t{\n\t\t/* translators: label for ordering posts by title in ascending order */\n\t\tlabel: __(\"A → Z\"),\n\t\tvalue: \"name/asc\",\n\t},\n\t{\n\t\t/* translators: label for ordering posts by title in descending order */\n\t\tlabel: __(\"Z → A\"),\n\t\tvalue: \"name/desc\",\n\t},\n\t{\n\t\tlabel: __(\"Count/asc\"),\n\t\tvalue: \"count/asc\",\n\t},\n\t{\n\t\tlabel: __(\"Count/desc\"),\n\t\tvalue: \"count/desc\",\n\t},\n\t{\n\t\tlabel: __(\"Term group/asc\"),\n\t\tvalue: \"term_group/asc\",\n\t},\n\t{\n\t\tlabel: __(\"Term group/desc\"),\n\t\tvalue: \"term_group/desc\",\n\t},\n];\n\ninterface OrderControlProps {\n\torder: string;\n\torderBy: string;\n\tonChange: (newOrder: { order: string; orderBy: string }) => void;\n}\n\nfunction OrderControl({ order, orderBy, onChange }: OrderControlProps) {\n\treturn (\n\t\t<SelectControl\n\t\t\t__nextHasNoMarginBottom\n\t\t\t__next40pxDefaultSize\n\t\t\tlabel={__(\"Order by\")}\n\t\t\tvalue={`${orderBy}/${order}`}\n\t\t\toptions={orderOptions}\n\t\t\tonChange={(value) => {\n\t\t\t\tconst [newOrderBy, newOrder] = value.split(\"/\");\n\t\t\t\tonChange({ order: newOrder, orderBy: newOrderBy });\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport default OrderControl;\n","/**\n * WordPress dependencies\n */\nimport { __experimentalNumberControl as NumberControl } from \"@wordpress/components\";\nimport { __ } from \"@wordpress/i18n\";\n\ninterface PagesControlProps {\n\tpage: number;\n\tonChange: (newPage: { page: number }) => void;\n}\n\nexport const PageControl = ({ page, onChange }: PagesControlProps) => {\n\treturn (\n\t\t<NumberControl\n\t\t\t__next40pxDefaultSize\n\t\t\tlabel={__(\"Page to show.\")}\n\t\t\tvalue={page}\n\t\t\tmin={0}\n\t\t\tonChange={(value) => {\n\t\t\t\tif (typeof value === \"undefined\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet newPage = 0;\n\t\t\t\tnewPage = parseInt(value);\n\t\t\t\tif (isNaN(newPage) || newPage < 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tonChange({ page: newPage });\n\t\t\t}}\n\t\t\thelp={__(\n\t\t\t\t\"Use this to specify the number of pages of the query to display. If you set it to 0 or leave it blank, it will display the first page of the query.\",\n\t\t\t)}\n\t\t/>\n\t);\n};\n\nexport default PageControl;\n","/**\n * WordPress dependencies\n */\nimport { RangeControl } from \"@wordpress/components\";\nimport { __ } from \"@wordpress/i18n\";\n\nconst MIN_POSTS_PER_PAGE = 1;\nconst MAX_POSTS_PER_PAGE = 100;\n\ninterface PerPageControlProps {\n\tperPage: number;\n\tonChange: ({ perPage }: { perPage: number }) => void;\n}\n\nconst PerPageControl = ({ perPage, onChange }: PerPageControlProps) => {\n\treturn (\n\t\t<RangeControl\n\t\t\t__next40pxDefaultSize\n\t\t\t__nextHasNoMarginBottom\n\t\t\tlabel={__(\"Posts per page\")}\n\t\t\tmin={MIN_POSTS_PER_PAGE}\n\t\t\tmax={MAX_POSTS_PER_PAGE}\n\t\t\tonChange={(newPerPage) => {\n\t\t\t\tif (typeof newPerPage === \"undefined\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tisNaN(newPerPage) ||\n\t\t\t\t\tnewPerPage < MIN_POSTS_PER_PAGE ||\n\t\t\t\t\tnewPerPage > MAX_POSTS_PER_PAGE\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tonChange({ perPage: newPerPage as number });\n\t\t\t}}\n\t\t\t// @ts-ignore\n\t\t\tvalue={parseInt(perPage, 10)}\n\t\t/>\n\t);\n};\n\nexport default PerPageControl;\n","/**\n * WordPress dependencies\n */\nimport { useDispatch } from \"@wordpress/data\";\nimport { useInstanceId } from \"@wordpress/compose\";\nimport { useEffect } from \"@wordpress/element\";\nimport {\n\tInspectorControls,\n\tuseBlockProps,\n\tstore as blockEditorStore,\n\tuseInnerBlocksProps,\n} from \"@wordpress/block-editor\";\nimport { SelectControl } from \"@wordpress/components\";\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * Internal dependencies\n */\nimport QueryInspectorControls from \"./inspector-controls\";\nimport { TermQueryEditProps } from \".\";\nimport metadata from \"../block.json\";\n\nexport type MyTermQueryKey =\n\tkeyof typeof metadata.attributes.myQuery.default & {};\n\nexport type MyTermQueryUpdateFuncT = (\n\tquery: Partial<Record<MyTermQueryKey, any>>,\n) => void;\n\n// export type TermQueryObT = TAttrs<typeof metadata.attributes.myQuery.default>;\n// export type UpdateTermQueryFuncT = (newQuery: Record<string,any>) => void;\n\nconst TEMPLATE = [[\"ncmfse/term-template-block\"]];\nexport default function QueryContent({\n\tattributes,\n\tsetAttributes,\n\tname,\n\tclientId,\n}: TermQueryEditProps) {\n\tconst {\n\t\tmyQueryId: queryId,\n\t\tmyQuery,\n\t\tdisplayLayout,\n\t\ttagName: TagName = \"div\",\n\t} = attributes;\n\tconst { __unstableMarkNextChangeAsNotPersistent } =\n\t\tuseDispatch(blockEditorStore);\n\tconst instanceId = useInstanceId(QueryContent);\n\tconst blockProps = useBlockProps();\n\n\tconst innerBlocksProps = useInnerBlocksProps(blockProps, {\n\t\ttemplate: TEMPLATE,\n\t});\n\n\t// There are some effects running where some initialization logic is\n\t// happening and setting some values to some attributes (ex. queryId).\n\t// These updates can cause an `undo trap` where undoing will result in\n\t// resetting again, so we need to mark these changes as not persistent\n\t// with `__unstableMarkNextChangeAsNotPersistent`.\n\n\t// Changes in query property (which is an object) need to be in the same callback,\n\t// because updates are batched after the render and changes in different query properties\n\t// would cause to override previous wanted changes.\n\n\t// We need this for multi-query block pagination.\n\t// Query parameters for each block are scoped to their ID.\n\tuseEffect(() => {\n\t\tif (!Number.isFinite(queryId)) {\n\t\t\t__unstableMarkNextChangeAsNotPersistent();\n\t\t\tsetAttributes({ myQueryId: instanceId });\n\t\t}\n\t}, [queryId, instanceId]);\n\n\tconst updateQuery: MyTermQueryUpdateFuncT = (newQuery) => {\n\t\tsetAttributes({ myQuery: { ...myQuery, ...newQuery } });\n\t};\n\n\tconst updateDisplayLayout = (newDisplayLayout: Record<string, any>) => {\n\t\tsetAttributes({\n\t\t\tdisplayLayout: { ...displayLayout, ...newDisplayLayout },\n\t\t});\n\t};\n\n\tconst htmlElementMessages = {\n\t\tmain: __(\n\t\t\t\"The <main> element should be used for the primary content of your document only.\",\n\t\t),\n\t\tsection: __(\n\t\t\t\"The <section> element should represent a standalone portion of the document that can't be better represented by another element.\",\n\t\t),\n\t\taside: __(\n\t\t\t\"The <aside> element should represent a portion of a document whose content is only indirectly related to the document's main content.\",\n\t\t),\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<QueryInspectorControls\n\t\t\t\t\tattributes={attributes}\n\t\t\t\t\tsetQuery={updateQuery}\n\t\t\t\t\tsetDisplayLayout={updateDisplayLayout}\n\t\t\t\t\tsetAttributes={setAttributes}\n\t\t\t\t\tclientId={clientId}\n\t\t\t\t/>\n\t\t\t</InspectorControls>\n\n\t\t\t<InspectorControls group=\"advanced\">\n\t\t\t\t<SelectControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\tlabel={__(\"HTML element\")}\n\t\t\t\t\toptions={\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t{ label: __(\"Default (<div>)\"), value: \"div\" },\n\t\t\t\t\t\t\t{ label: \"<main>\", value: \"main\" },\n\t\t\t\t\t\t\t{ label: \"<section>\", value: \"section\" },\n\t\t\t\t\t\t\t{ label: \"<aside>\", value: \"aside\" },\n\t\t\t\t\t\t] as { label: string; value: \"main\" | \"section\" | \"aside\" }[]\n\t\t\t\t\t}\n\t\t\t\t\tvalue={TagName}\n\t\t\t\t\tonChange={(value) => setAttributes({ tagName: value })}\n\t\t\t\t\thelp={htmlElementMessages[TagName as \"main\" | \"section\" | \"aside\"]}\n\t\t\t\t/>\n\t\t\t</InspectorControls>\n\t\t\t<TagName {...innerBlocksProps} />\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from \"@wordpress/data\";\nimport {\n\tcreateBlocksFromInnerBlocksTemplate,\n\tstore as blocksStore,\n} from \"@wordpress/blocks\";\nimport { useState } from \"@wordpress/element\";\nimport {\n\tuseBlockProps,\n\tstore as blockEditorStore,\n\t// @ts-ignore\n\t__experimentalBlockVariationPicker,\n} from \"@wordpress/block-editor\";\nimport { Button, Placeholder } from \"@wordpress/components\";\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * Internal dependencies\n */\nimport { useScopedBlockVariations, useBlockNameForPatterns } from \"../utils\";\nimport { TermQueryEditProps } from \".\";\n\nexport default function QueryPlaceholder({\n\tattributes,\n\tclientId,\n\tname,\n\topenPatternSelectionModal,\n}: TermQueryEditProps) {\n\tconst [isStartingBlank, setIsStartingBlank] = useState(false);\n\tconst blockProps = useBlockProps();\n\tconst blockNameForPatterns = useBlockNameForPatterns(clientId, attributes);\n\tconst { blockType, activeBlockVariation, hasPatterns } = useSelect(\n\t\t(select) => {\n\t\t\tconst { getActiveBlockVariation, getBlockType } = select(\n\t\t\t\tblocksStore,\n\t\t\t) as Record<string, any>;\n\t\t\tconst { getBlockRootClientId, getPatternsByBlockTypes } = select(\n\t\t\t\tblockEditorStore,\n\t\t\t) as Record<string, any>;\n\t\t\tconst rootClientId = getBlockRootClientId(clientId);\n\t\t\treturn {\n\t\t\t\tblockType: getBlockType(name),\n\t\t\t\tactiveBlockVariation: getActiveBlockVariation(name, attributes),\n\t\t\t\thasPatterns: !!getPatternsByBlockTypes(\n\t\t\t\t\tblockNameForPatterns,\n\t\t\t\t\trootClientId,\n\t\t\t\t).length,\n\t\t\t};\n\t\t},\n\t\t[name, blockNameForPatterns, clientId, attributes],\n\t);\n\tconst icon =\n\t\tactiveBlockVariation?.icon?.src ||\n\t\tactiveBlockVariation?.icon ||\n\t\tblockType?.icon?.src;\n\tconst label = activeBlockVariation?.title || blockType?.title;\n\tif (isStartingBlank) {\n\t\treturn (\n\t\t\t// @ts-ignore\n\t\t\t<QueryVariationPicker\n\t\t\t\tclientId={clientId}\n\t\t\t\tattributes={attributes}\n\t\t\t\ticon={icon}\n\t\t\t\tlabel={label}\n\t\t\t/>\n\t\t);\n\t}\n\treturn (\n\t\t<div {...blockProps}>\n\t\t\t<Placeholder\n\t\t\t\ticon={icon}\n\t\t\t\tlabel={label}\n\t\t\t\tinstructions={__(\"Choose a pattern for the query loop or start blank.\")}\n\t\t\t>\n\t\t\t\t{!!hasPatterns && (\n\t\t\t\t\t<Button\n\t\t\t\t\t\t// TODO: Switch to `true` (40px size) if possible\n\t\t\t\t\t\t__next40pxDefaultSize={false}\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tonClick={openPatternSelectionModal}\n\t\t\t\t\t>\n\t\t\t\t\t\t{__(\"Choose\")}\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\n\t\t\t\t<Button\n\t\t\t\t\t// TODO: Switch to `true` (40px size) if possible\n\t\t\t\t\t__next40pxDefaultSize={false}\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetIsStartingBlank(true);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{__(\"Start blank\")}\n\t\t\t\t</Button>\n\t\t\t</Placeholder>\n\t\t</div>\n\t);\n}\n\nfunction QueryVariationPicker({\n\tclientId,\n\tattributes,\n\ticon,\n\tlabel,\n}: TermQueryEditProps) {\n\tconst scopeVariations = useScopedBlockVariations(attributes);\n\n\tconst { replaceInnerBlocks } = useDispatch(blockEditorStore);\n\tconst blockProps = useBlockProps();\n\treturn (\n\t\t<div {...blockProps}>\n\t\t\t<__experimentalBlockVariationPicker\n\t\t\t\ticon={icon}\n\t\t\t\tlabel={label}\n\t\t\t\tvariations={scopeVariations}\n\t\t\t\tonSelect={(variation: Record<string, any>) => {\n\t\t\t\t\tif (variation.innerBlocks) {\n\t\t\t\t\t\treplaceInnerBlocks(\n\t\t\t\t\t\t\tclientId,\n\t\t\t\t\t\t\tcreateBlocksFromInnerBlocksTemplate(variation.innerBlocks),\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/components';\n\nexport const titleDate = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n\t\t<Path d=\"M41 9H7v3h34V9zm-22 5H7v1h12v-1zM7 26h12v1H7v-1zm34-5H7v3h34v-3zM7 38h12v1H7v-1zm34-5H7v3h34v-3z\" />\n\t</SVG>\n);\n\nexport const titleExcerpt = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n\t\t<Path d=\"M41 9H7v3h34V9zm-4 5H7v1h30v-1zm4 3H7v1h34v-1zM7 20h30v1H7v-1zm0 12h30v1H7v-1zm34 3H7v1h34v-1zM7 38h30v1H7v-1zm34-11H7v3h34v-3z\" />\n\t</SVG>\n);\n\nexport const titleDateExcerpt = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n\t\t<Path d=\"M41 9H7v3h34V9zm-22 5H7v1h12v-1zm22 3H7v1h34v-1zM7 20h34v1H7v-1zm0 12h12v1H7v-1zm34 3H7v1h34v-1zM7 38h34v1H7v-1zm34-11H7v3h34v-3z\" />\n\t</SVG>\n);\n\nexport const imageDateTitle = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n\t\t<Path d=\"M7 9h34v6H7V9zm12 8H7v1h12v-1zm18 3H7v1h30v-1zm0 18H7v1h30v-1zM7 35h12v1H7v-1zm34-8H7v6h34v-6z\" />\n\t</SVG>\n);\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { loop as icon } from \"@wordpress/icons\";\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport \"./style.scss\";\n\n/**\n * Internal dependencies\n */\nimport Edit from \"./edit/index\";\nimport save from \"./save\";\nimport metadata from \"./block.json\";\nimport variations from \"./variations\";\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType(metadata.name, {\n\ticon,\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\tsave,\n\tvariations,\n});\n","/**\n * WordPress dependencies\n */\nimport { useInnerBlocksProps, useBlockProps } from '@wordpress/block-editor';\n\nexport default function save( { attributes: { tagName: Tag = 'div' } } ) {\n\tconst blockProps = useBlockProps.save();\n\tconst innerBlocksProps = useInnerBlocksProps.save( blockProps );\n\treturn <Tag { ...innerBlocksProps } />;\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from \"@wordpress/data\";\nimport { useMemo } from \"@wordpress/element\";\nimport { store as blockEditorStore } from \"@wordpress/block-editor\";\nimport { store as blocksStore } from \"@wordpress/blocks\";\nimport { store as coreStore } from \"@wordpress/core-data\";\n\n/**\n * Hook that returns the taxonomies associated with a specific post type.\n *\n * @param {string} postType The post type from which to retrieve the associated taxonomies.\n * @return {Object[]} An array of the associated taxonomies.\n */\nexport const useTaxonomies = (postType: string) => {\n\tconst taxonomies = useSelect(\n\t\t(select) => {\n\t\t\tconst { getTaxonomies, getPostType } = select(coreStore);\n\t\t\t// Does the post type have taxonomies?\n\t\t\t// @ts-ignore\n\t\t\tif (getPostType(postType)?.taxonomies?.length > 0) {\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn getTaxonomies({\n\t\t\t\t\ttype: postType,\n\t\t\t\t\tper_page: -1,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn [];\n\t\t},\n\t\t[postType],\n\t) as Record<string, any>[];\n\treturn useMemo(() => {\n\t\treturn taxonomies?.filter(\n\t\t\t({ visibility }: Record<string, any>) => !!visibility?.publicly_queryable,\n\t\t);\n\t}, [taxonomies]);\n};\n\n/**\n * Returns a helper object that contains:\n * 1. An `options` object from the available post types, to be passed to a `SelectControl`.\n * 2. A helper map with available taxonomies per post type.\n *\n * @return {Object} The helper object related to post types.\n */\nexport const usePostTypes = () => {\n\tconst postTypes = useSelect((select) => {\n\t\tconst { getPostTypes } = select(coreStore);\n\t\tconst excludedPostTypes = [\"attachment\"];\n\t\t// @ts-ignore\n\t\tconst filteredPostTypes = getPostTypes({ per_page: -1 })?.filter(\n\t\t\t({ viewable, slug }: Record<string, any>) =>\n\t\t\t\tviewable && !excludedPostTypes.includes(slug),\n\t\t);\n\t\treturn filteredPostTypes as Record<string, any>[];\n\t}, []);\n\tconst postTypesTaxonomiesMap = useMemo(() => {\n\t\tif (!postTypes?.length) {\n\t\t\treturn;\n\t\t}\n\t\treturn postTypes.reduce((accumulator, type) => {\n\t\t\taccumulator[type.slug] = type.taxonomies;\n\t\t\treturn accumulator;\n\t\t}, {});\n\t}, [postTypes]);\n\tconst postTypesSelectOptions = useMemo(\n\t\t() =>\n\t\t\t(postTypes || []).map(({ labels, slug }) => ({\n\t\t\t\tlabel: labels.singular_name,\n\t\t\t\tvalue: slug,\n\t\t\t})),\n\t\t[postTypes],\n\t);\n\treturn { postTypesTaxonomiesMap, postTypesSelectOptions };\n};\n\n/**\n * Helper hook that determines if there is an active variation of the block\n * and if there are available specific patterns for this variation.\n * If there are, these patterns are going to be the only ones suggested to\n * the user in setup and replace flow, without including the default ones\n * for Query Loop.\n *\n * If there are no such patterns, the default ones for Query Loop are going\n * to be suggested.\n *\n * @param {string} clientId   The block's client ID.\n * @param {Object} attributes The block's attributes.\n * @return {string} The block name to be used in the patterns suggestions.\n */\nexport function useBlockNameForPatterns(\n\tclientId: string,\n\tattributes: Record<string, any>,\n) {\n\tconst activeVariationName = useSelect(\n\t\t(select) =>\n\t\t\t(select(blocksStore) as any).getActiveBlockVariation(\n\t\t\t\t\"ncmfse/term-query-loop\",\n\t\t\t\tattributes,\n\t\t\t)?.name,\n\t\t[attributes],\n\t);\n\tconst blockName = `ncmfse/term-query-loop/${activeVariationName}`;\n\tconst hasActiveVariationPatterns = useSelect(\n\t\t(select) => {\n\t\t\tif (!activeVariationName) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst { getBlockRootClientId, getPatternsByBlockTypes } = select(\n\t\t\t\tblockEditorStore,\n\t\t\t) as Record<string, any>;\n\t\t\tconst rootClientId = getBlockRootClientId(clientId);\n\t\t\tconst activePatterns = getPatternsByBlockTypes(blockName, rootClientId);\n\t\t\treturn activePatterns.length > 0;\n\t\t},\n\t\t[clientId, activeVariationName, blockName],\n\t);\n\treturn hasActiveVariationPatterns ? blockName : \"ncmfse/term-query-loop\";\n}\n\n/**\n * Helper hook that determines if there is an active variation of the block\n * and if there are available specific scoped `block` variations connected with\n * this variation.\n *\n * If there are, these variations are going to be the only ones suggested\n * to the user in setup flow when clicking to `start blank`, without including\n * the default ones for Query Loop.\n *\n * If there are no such scoped `block` variations, the default ones for Query\n * Loop are going to be suggested.\n *\n * The way we determine such variations is with the convention that they have the `namespace`\n * attribute defined as an array. This array should contain the names(`name` property) of any\n * variations they want to be connected to.\n * For example, if we have a `Query Loop` scoped `inserter` variation with the name `products`,\n * we can connect a scoped `block` variation by setting its `namespace` attribute to `['products']`.\n * If the user selects this variation, the `namespace` attribute will be overridden by the\n * main `inserter` variation.\n *\n * @param {Object} attributes The block's attributes.\n * @return {WPBlockVariation[]} The block variations to be suggested in setup flow, when clicking to `start blank`.\n */\nexport function useScopedBlockVariations(attributes: Record<string, any>) {\n\tconst { activeVariationName, blockVariations } = useSelect(\n\t\t(select) => {\n\t\t\tconst { getActiveBlockVariation, getBlockVariations } = select(\n\t\t\t\tblocksStore,\n\t\t\t) as Record<string, any>;\n\t\t\treturn {\n\t\t\t\tactiveVariationName: getActiveBlockVariation(\n\t\t\t\t\t\"ncmfse/term-query-loop\",\n\t\t\t\t\tattributes,\n\t\t\t\t)?.name,\n\t\t\t\tblockVariations: getBlockVariations(\"ncmfse/term-query-loop\", \"block\"),\n\t\t\t};\n\t\t},\n\t\t[attributes],\n\t);\n\tconst variations = useMemo(() => {\n\t\t// Filter out the variations that have defined a `namespace` attribute,\n\t\t// which means they are 'connected' to specific variations of the block.\n\t\tconst isNotConnected = (variation: Record<string, any>) =>\n\t\t\t!variation.attributes?.namespace;\n\t\tif (!activeVariationName) {\n\t\t\treturn blockVariations.filter(isNotConnected);\n\t\t}\n\t\tconst connectedVariations = blockVariations.filter(\n\t\t\t(variation: Record<string, any>) =>\n\t\t\t\tvariation.attributes?.namespace?.includes(activeVariationName),\n\t\t);\n\t\tif (!!connectedVariations.length) {\n\t\t\treturn connectedVariations;\n\t\t}\n\t\treturn blockVariations.filter(isNotConnected);\n\t}, [activeVariationName, blockVariations]);\n\treturn variations;\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * Internal dependencies\n */\nimport { titleDate } from \"./icons\";\n\nconst variations = [\n\t{\n\t\tname: \"title-date\",\n\t\ttitle: __(\"Title & Date\"),\n\t\ticon: titleDate,\n\t\tattributes: {},\n\t\tinnerBlocks: [\n\t\t\t[\n\t\t\t\t\"ncmfse/term-template\",\n\t\t\t\t{},\n\t\t\t\t[\n\t\t\t\t\t[\n\t\t\t\t\t\t\"core/group\",\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t// [\"ncmfse/term-cover-img\"],\n\t\t\t\t\t\t\t[\"ncmfse/term-featured-img\"],\n\t\t\t\t\t\t\t[\"ncmfse/term-name\"],\n\t\t\t\t\t\t\t[\"ncmfse/term-description\"],\n\t\t\t\t\t\t\t[\"ncmfse/term-count\"],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t],\n\t\tscope: [\"block\"],\n\t},\n];\n\nexport default variations;\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"term-query-loop-block/index\": 0,\n\t\"term-query-loop-block/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunktodo_list\"] = globalThis[\"webpackChunktodo_list\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"term-query-loop-block/style-index\"], () => (__webpack_require__(\"./src/term-query-loop-block/index.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["useSelect","store","blockEditorStore","QueryContent","QueryPlaceholder","QueryEdit","props","clientId","hasInnerBlocks","select","getBlocks","length","Component","createElement","Fragment","BaseControl","FormTokenField","PanelBody","SelectControl","ToggleControl","__experimentalToggleGroupControl","ToggleGroupControl","__experimentalToggleGroupControlOption","ToggleGroupControlOption","__","useEntityRecords","useMemo","OrderControl","PerPageControl","PageControl","usePostTypes","useTaxonomies","QueryInspectorControls","attributes","setQuery","setDisplayLayout","setAttributes","myQuery","displayLayout","perPage","isFilterByOrder","taxonomySlug","termIdList","inherit","excludeIdList","hideEmpty","order","orderBy","parentIdString","postType","page","taxonomiesRecords","records","termRecords","per_page","orderby","_fields","context","postTypesTaxonomiesMap","postTypesSelectOptions","taxonomies","data","map","item","visibility","publicly_queryable","value","slug","label","name","filter","termRecordsConvert","parent","find","term","id","toString","childTermRecords","onPostTypeChange","newValue","updateQuery","supportedTaxonomies","termNameList","temChildNameList","getTermNameListFromIds","ids","includes","getTermIdsFromNames","names","postTypeControlHelp","title","__nextHasNoMarginBottom","checked","onChange","help","__next40pxDefaultSize","options","isBlock","option","key","initialOpen","__experimentalAutoSelectFirstMatch","__experimentalExpandOnFocus","__experimentalShowHowTo","Array","isArray","parentIds","reverse","suggestions","maxLength","placeholder","orderOptions","newOrderBy","newOrder","split","__experimentalNumberControl","NumberControl","min","newPage","parseInt","isNaN","RangeControl","MIN_POSTS_PER_PAGE","MAX_POSTS_PER_PAGE","max","newPerPage","useDispatch","useInstanceId","useEffect","InspectorControls","useBlockProps","useInnerBlocksProps","TEMPLATE","myQueryId","queryId","tagName","TagName","__unstableMarkNextChangeAsNotPersistent","instanceId","blockProps","innerBlocksProps","template","Number","isFinite","newQuery","updateDisplayLayout","newDisplayLayout","htmlElementMessages","main","section","aside","group","createBlocksFromInnerBlocksTemplate","blocksStore","useState","__experimentalBlockVariationPicker","Button","Placeholder","useScopedBlockVariations","useBlockNameForPatterns","openPatternSelectionModal","isStartingBlank","setIsStartingBlank","blockNameForPatterns","blockType","activeBlockVariation","hasPatterns","getActiveBlockVariation","getBlockType","getBlockRootClientId","getPatternsByBlockTypes","rootClientId","icon","src","QueryVariationPicker","instructions","variant","onClick","scopeVariations","replaceInnerBlocks","variations","onSelect","variation","innerBlocks","Path","SVG","titleDate","xmlns","viewBox","d","titleExcerpt","titleDateExcerpt","imageDateTitle","registerBlockType","loop","Edit","save","metadata","edit","Tag","coreStore","getTaxonomies","getPostType","type","postTypes","getPostTypes","excludedPostTypes","filteredPostTypes","viewable","reduce","accumulator","labels","singular_name","activeVariationName","blockName","hasActiveVariationPatterns","activePatterns","blockVariations","getBlockVariations","isNotConnected","namespace","connectedVariations","scope"],"sourceRoot":""}